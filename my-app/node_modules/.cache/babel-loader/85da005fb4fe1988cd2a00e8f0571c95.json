{"ast":null,"code":"var _jsxFileName = \"/Users/architbubber/Web_Dev/Gmaps/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Map from \"mapmyindia-react\";\nimport App from './App';\nimport raw from './location.txt';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar lat, long;\nvar myelement;\nfetch(raw).then(r => r.text()).then(text => {\n  lat = parseFloat(text.split(',')[0]);\n  long = parseFloat(text.split(',')[1]);\n  console.log('New Lat:', lat);\n  myelement = /*#__PURE__*/_jsxDEV(Map, {\n    markers: [{\n      position: [parseFloat(lat), parseFloat(long)],\n      draggable: true,\n      title: \"Marker title\",\n      onClick: e => {\n        console.log(\"clicked \");\n      },\n      onDragend: e => {\n        console.log(\"dragged\");\n      }\n    }]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 16\n  }, this);\n});\n/*\nfetch('http://localhost:3000/update').then(function() {\n  const url = window.location.search;\n  var fs = require('fs'),\n  filename = '../../location.txt';\n  var lat1=parseFloat(url.substr(url.indexOf('=')+1));\n  var long1=parseFloat(url.substr(url.indexOf('g')+2));\n  fs.writeFile('location.txt', lat1 + \",\" + long1, function() { console.log('done') });\n  console.log('lat =' +lat1+' long = '+long1);\n  });\n*/\n\n/*ReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);*/\n\nReactDOM.render(myelement, document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/Users/architbubber/Web_Dev/Gmaps/my-app/src/index.js"],"names":["React","ReactDOM","Map","App","raw","reportWebVitals","lat","long","myelement","fetch","then","r","text","parseFloat","split","console","log","position","draggable","title","onClick","e","onDragend","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AACA,IAAIC,GAAJ,EAAQC,IAAR;AACA,IAAIC,SAAJ;AACAC,KAAK,CAACL,GAAD,CAAL,CACGM,IADH,CACQC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADb,EAEGF,IAFH,CAEQE,IAAI,IAAI;AACZN,EAAAA,GAAG,GAAGO,UAAU,CAACD,IAAI,CAACE,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAD,CAAhB;AACAP,EAAAA,IAAI,GAAGM,UAAU,CAACD,IAAI,CAACE,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAD,CAAjB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBV,GAAxB;AACAE,EAAAA,SAAS,gBAAE,QAAC,GAAD;AACT,IAAA,OAAO,EAAE,CACL;AACIS,MAAAA,QAAQ,EAAE,CAAEJ,UAAU,CAACP,GAAD,CAAZ,EAAoBO,UAAU,CAACN,IAAD,CAA9B,CADd;AAEIW,MAAAA,SAAS,EAAE,IAFf;AAGIC,MAAAA,KAAK,EAAC,cAHV;AAIIC,MAAAA,OAAO,EAAEC,CAAC,IAAI;AACVN,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH,OANL;AAOIM,MAAAA,SAAS,EAAED,CAAC,IAAI;AACZN,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH;AATL,KADK;AADA;AAAA;AAAA;AAAA;AAAA,UAAX;AAeD,CArBH;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAf,QAAQ,CAACsB,MAAT,CAAgBf,SAAhB,EAA2BgB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA3B,E,CAEA;AACA;AACA;;AAEApB,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Map from \"mapmyindia-react\";\nimport App from './App';\nimport raw from './location.txt';\nimport reportWebVitals from './reportWebVitals';\nvar lat,long;\nvar myelement;\nfetch(raw)\n  .then(r => r.text())\n  .then(text => {\n    lat = parseFloat(text.split(',')[0]);\n    long = parseFloat(text.split(',')[1]);\n    console.log('New Lat:', lat);\n    myelement=(<Map\n      markers={[\n          { \n              position: [ parseFloat(lat) , parseFloat(long)],\n              draggable: true, \n              title:\"Marker title\",\n              onClick: e => {\n                  console.log(\"clicked \");\n              },\n              onDragend: e => {\n                  console.log(\"dragged\");\n              }\n          }\n      ]}\n      />)\n  });\n/*\nfetch('http://localhost:3000/update').then(function() {\n  const url = window.location.search;\n  var fs = require('fs'),\n  filename = '../../location.txt';\n  var lat1=parseFloat(url.substr(url.indexOf('=')+1));\n  var long1=parseFloat(url.substr(url.indexOf('g')+2));\n  fs.writeFile('location.txt', lat1 + \",\" + long1, function() { console.log('done') });\n  console.log('lat =' +lat1+' long = '+long1);\n  });\n*/\n/*ReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);*/\n  \nReactDOM.render(myelement ,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\n"]},"metadata":{},"sourceType":"module"}