{"ast":null,"code":"var _jsxFileName = \"/Users/architbubber/GITHUB/trackme/nore/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport Map from \"mapmyindia-react\";\nimport './App.css';\nimport { lat1, long1 } from './location.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar lat, long;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      response: '',\n      post: '',\n      responseToPost: ''\n    };\n\n    this.callApi = async () => {\n      const response = await fetch('/update');\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      console.log(body);\n      return body;\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const response = await fetch('/api/world', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          post: this.state.post\n        })\n      });\n      const body = await response.text();\n      this.setState({\n        responseToPost: body\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.callApi().then(res => this.setState({\n      response: res.express\n    })).catch(err => console.log(err));\n  }\n\n  get() {\n    lat = lat1;\n    long = long1;\n    console.log('lat=' + lat + \" long=\" + long);\n    return 1;\n  }\n\n  render() {\n    if (this.get()) {\n      return /*#__PURE__*/_jsxDEV(Map, {\n        markers: [{\n          position: [parseFloat(lat), parseFloat(long)],\n          draggable: true,\n          title: \"I am here\",\n          onClick: e => {\n            console.log(\"clicked \");\n          },\n          onDragend: e => {\n            console.log(\"dragged\");\n          }\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this);\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/architbubber/GITHUB/trackme/nore/my-app/src/App.js"],"names":["React","Component","Map","lat1","long1","lat","long","App","state","response","post","responseToPost","callApi","fetch","body","json","status","Error","message","console","log","handleSubmit","e","preventDefault","method","headers","JSON","stringify","text","setState","componentDidMount","then","res","express","catch","err","get","render","position","parseFloat","draggable","title","onClick","onDragend"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAO,WAAP;AACA,SAAQC,IAAR,EAAaC,KAAb,QAAyB,eAAzB;;AACA,IAAIC,GAAJ,EAAQC,IAAR;;AAGA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BO,KAD0B,GAClB;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,IAAI,EAAE,EAFA;AAGNC,MAAAA,cAAc,EAAE;AAHV,KADkB;;AAAA,SAa1BC,OAb0B,GAahB,YAAY;AACpB,YAAMH,QAAQ,GAAG,MAAMI,KAAK,CAAC,SAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAnB;AACA,UAAIN,QAAQ,CAACO,MAAT,KAAoB,GAAxB,EAA6B,MAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACA,aAAOA,IAAP;AACD,KAnByB;;AAAA,SAqB1BO,YArB0B,GAqBX,MAAMC,CAAN,IAAW;AACxBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMd,QAAQ,GAAG,MAAMI,KAAK,CAAC,YAAD,EAAe;AACzCW,QAAAA,MAAM,EAAE,MADiC;AAEzCC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFgC;AAKzCX,QAAAA,IAAI,EAAEY,IAAI,CAACC,SAAL,CAAe;AAAEjB,UAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE;AAAnB,SAAf;AALmC,OAAf,CAA5B;AAOA,YAAMI,IAAI,GAAG,MAAML,QAAQ,CAACmB,IAAT,EAAnB;AAEA,WAAKC,QAAL,CAAc;AAAElB,QAAAA,cAAc,EAAEG;AAAlB,OAAd;AACD,KAjCyB;AAAA;;AAO1BgB,EAAAA,iBAAiB,GAAG;AAClB,SAAKlB,OAAL,GACGmB,IADH,CACQC,GAAG,IAAI,KAAKH,QAAL,CAAc;AAAEpB,MAAAA,QAAQ,EAAEuB,GAAG,CAACC;AAAhB,KAAd,CADf,EAEGC,KAFH,CAESC,GAAG,IAAIhB,OAAO,CAACC,GAAR,CAAYe,GAAZ,CAFhB;AAGD;;AAuBDC,EAAAA,GAAG,GAAE;AACH/B,IAAAA,GAAG,GAACF,IAAJ;AACAG,IAAAA,IAAI,GAACF,KAAL;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAOf,GAAP,GAAW,QAAX,GAAoBC,IAAhC;AACA,WAAO,CAAP;AACD;;AAEH+B,EAAAA,MAAM,GAAG;AACP,QAAG,KAAKD,GAAL,EAAH,EAAc;AACd,0BACE,QAAC,GAAD;AACE,QAAA,OAAO,EAAE,CACL;AACIE,UAAAA,QAAQ,EAAE,CAAEC,UAAU,CAAClC,GAAD,CAAZ,EAAoBkC,UAAU,CAACjC,IAAD,CAA9B,CADd;AAEIkC,UAAAA,SAAS,EAAE,IAFf;AAGIC,UAAAA,KAAK,EAAC,WAHV;AAIIC,UAAAA,OAAO,EAAEpB,CAAC,IAAI;AACVH,YAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH,WANL;AAOIuB,UAAAA,SAAS,EAAErB,CAAC,IAAI;AACZH,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH;AATL,SADK;AADX;AAAA;AAAA;AAAA;AAAA,cADF;AAiBG;AAGJ;;AA/D2B;;AAkE5B,eAAeb,GAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport Map from \"mapmyindia-react\";\nimport './App.css';\nimport {lat1,long1} from './location.js';\nvar lat,long;\n\n\nclass App extends Component {\n  state = {\n    response: '',\n    post: '',\n    responseToPost: '',\n  };\n  \n  componentDidMount() {\n    this.callApi()\n      .then(res => this.setState({ response: res.express }))\n      .catch(err => console.log(err));\n  }\n  \n  callApi = async () => {\n    const response = await fetch('/update');\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n    console.log(body);\n    return body;\n  };\n  \n  handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('/api/world', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ post: this.state.post }),\n    });\n    const body = await response.text();\n    \n    this.setState({ responseToPost: body });\n  };\n  get(){\n    lat=lat1;\n    long=long1;\n    console.log('lat='+lat+\" long=\"+long);\n    return 1;\n  }\n  \nrender() {\n  if(this.get()){\n  return (\n    <Map\n      markers={[\n          { \n              position: [ parseFloat(lat) , parseFloat(long)],\n              draggable: true, \n              title:\"I am here\",\n              onClick: e => {\n                  console.log(\"clicked \");\n              },\n              onDragend: e => {\n                  console.log(\"dragged\");\n              }\n          }\n      ]}\n      />\n );\n    }\n  \n\n}\n}\n\nexport default App;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}