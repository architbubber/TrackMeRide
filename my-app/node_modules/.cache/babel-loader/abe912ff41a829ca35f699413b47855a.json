{"ast":null,"code":"var _jsxFileName = \"/Users/architbubber/Web_Dev/Gmaps/my-app/src/App.js\";\nimport './App.css';\nimport Map from \"mapmyindia-react\";\nimport React from 'react';\nimport raw from './location.txt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar lat = 18.5314,\n    long = 73.845,\n    i = 0; //var lat,long,i=0;\n\n/*fetch(raw)\n.then(r => r.text())\n.then(text => {\n  lat = parseFloat(text.split(',')[0]);\n  long = parseFloat(text.split(',')[1]);\n  i+=1;\n  console.log(i+'text decoded:', lat);\n});*/\n\nfunction App() {\n  function readTextFile(file) {\n    var rawFile = new XMLHttpRequest();\n    rawFile.open(\"GET\", file, false);\n\n    rawFile.onreadystatechange = function () {\n      if (rawFile.readyState === 4) {\n        if (rawFile.status === 200 || rawFile.status == 0) {\n          var text = rawFile.responseText;\n          lat = parseFloat(text.split(',')[0]);\n          long = parseFloat(text.split(',')[1]);\n          alert(text);\n          return 1;\n        }\n      }\n    };\n\n    rawFile.send(null);\n  }\n\n  function get() {\n    console.log(i + 'get:');\n    fetch(raw).then(r => r.text()).then(text => {\n      lat = parseFloat(text.split(',')[0]);\n      long = parseFloat(text.split(',')[1]);\n      console.log(i + 'text decoded:', lat);\n      i += 1;\n    });\n    return 1;\n  }\n\n  if (readTextFile(\"./location.txt\")) {\n    console.log(\"return now \" + i);\n    i += 1;\n    return /*#__PURE__*/_jsxDEV(Map, {\n      markers: [{\n        position: [parseFloat(lat), parseFloat(long)],\n        draggable: true,\n        title: parseFloat(lat),\n        onClick: e => {\n          console.log(\"clicked \");\n        },\n        onDragend: e => {\n          console.log(\"dragged\");\n        }\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this);\n  }\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/architbubber/Web_Dev/Gmaps/my-app/src/App.js"],"names":["Map","React","raw","lat","long","i","App","readTextFile","file","rawFile","XMLHttpRequest","open","onreadystatechange","readyState","status","text","responseText","parseFloat","split","alert","send","get","console","log","fetch","then","r","position","draggable","title","onClick","e","onDragend"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,GAAP,MAAgB,kBAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,gBAAhB;;AACA,IAAIC,GAAG,GAAE,OAAT;AAAA,IAAiBC,IAAI,GAAC,MAAtB;AAAA,IAA6BC,CAAC,GAAC,CAA/B,C,CACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,SAASC,GAAT,GAAe;AACb,WAASC,YAAT,CAAsBC,IAAtB,EACF;AACI,QAAIC,OAAO,GAAG,IAAIC,cAAJ,EAAd;AACAD,IAAAA,OAAO,CAACE,IAAR,CAAa,KAAb,EAAoBH,IAApB,EAA0B,KAA1B;;AACAC,IAAAA,OAAO,CAACG,kBAAR,GAA6B,YAC7B;AACI,UAAGH,OAAO,CAACI,UAAR,KAAuB,CAA1B,EACA;AACI,YAAGJ,OAAO,CAACK,MAAR,KAAmB,GAAnB,IAA0BL,OAAO,CAACK,MAAR,IAAkB,CAA/C,EACA;AACI,cAAIC,IAAI,GAAGN,OAAO,CAACO,YAAnB;AACAb,UAAAA,GAAG,GAAGc,UAAU,CAACF,IAAI,CAACG,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAD,CAAhB;AACAd,UAAAA,IAAI,GAAGa,UAAU,CAACF,IAAI,CAACG,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAD,CAAjB;AAEAC,UAAAA,KAAK,CAACJ,IAAD,CAAL;AACA,iBAAO,CAAP;AACH;AACJ;AACJ,KAdD;;AAeAN,IAAAA,OAAO,CAACW,IAAR,CAAa,IAAb;AACH;;AACC,WAASC,GAAT,GAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYlB,CAAC,GAAC,MAAd;AACFmB,IAAAA,KAAK,CAACtB,GAAD,CAAL,CACKuB,IADL,CACUC,CAAC,IAAIA,CAAC,CAACX,IAAF,EADf,EAEKU,IAFL,CAEUV,IAAI,IAAI;AACZZ,MAAAA,GAAG,GAAGc,UAAU,CAACF,IAAI,CAACG,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAD,CAAhB;AACAd,MAAAA,IAAI,GAAGa,UAAU,CAACF,IAAI,CAACG,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAD,CAAjB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYlB,CAAC,GAAC,eAAd,EAA+BF,GAA/B;AACAE,MAAAA,CAAC,IAAE,CAAH;AACD,KAPL;AAQI,WAAO,CAAP;AACD;;AAED,MAAGE,YAAY,CAAC,gBAAD,CAAf,EAAkC;AAChCe,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAclB,CAA1B;AACAA,IAAAA,CAAC,IAAE,CAAH;AACA,wBACE,QAAC,GAAD;AACE,MAAA,OAAO,EAAE,CACL;AACIsB,QAAAA,QAAQ,EAAE,CAAEV,UAAU,CAACd,GAAD,CAAZ,EAAoBc,UAAU,CAACb,IAAD,CAA9B,CADd;AAEIwB,QAAAA,SAAS,EAAE,IAFf;AAGIC,QAAAA,KAAK,EAACZ,UAAU,CAACd,GAAD,CAHpB;AAII2B,QAAAA,OAAO,EAAEC,CAAC,IAAI;AACVT,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH,SANL;AAOIS,QAAAA,SAAS,EAAED,CAAC,IAAI;AACZT,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH;AATL,OADK;AADX;AAAA;AAAA;AAAA;AAAA,YADF;AAkBG;AAGN;;KA3DMjB,G;AA6DT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport Map from \"mapmyindia-react\";\nimport React from 'react';\nimport raw from './location.txt'; \nvar lat= 18.5314,long=73.845,i=0;\n//var lat,long,i=0;\n/*fetch(raw)\n.then(r => r.text())\n.then(text => {\n  lat = parseFloat(text.split(',')[0]);\n  long = parseFloat(text.split(',')[1]);\n  i+=1;\n  console.log(i+'text decoded:', lat);\n});*/\n\n  \n  \nfunction App() {\n  function readTextFile(file)\n{\n    var rawFile = new XMLHttpRequest();\n    rawFile.open(\"GET\", file, false);\n    rawFile.onreadystatechange = function ()\n    {\n        if(rawFile.readyState === 4)\n        {\n            if(rawFile.status === 200 || rawFile.status == 0)\n            {\n                var text = rawFile.responseText;\n                lat = parseFloat(text.split(',')[0]);\n                long = parseFloat(text.split(',')[1]);\n\n                alert(text);\n                return 1;\n            }\n        }\n    }\n    rawFile.send(null);\n}\n  function get(){\n    console.log(i+'get:' );\n  fetch(raw)\n      .then(r => r.text())\n      .then(text => {\n        lat = parseFloat(text.split(',')[0]);\n        long = parseFloat(text.split(',')[1]);\n        console.log(i+'text decoded:', lat);\n        i+=1;\n      });\n      return 1;\n    }\n    \n    if(readTextFile(\"./location.txt\")){\n      console.log(\"return now \"+i);\n      i+=1;\n      return (\n        <Map\n          markers={[\n              { \n                  position: [ parseFloat(lat) , parseFloat(long)],\n                  draggable: true, \n                  title:parseFloat(lat),\n                  onClick: e => {\n                      console.log(\"clicked \");\n                  },\n                  onDragend: e => {\n                      console.log(\"dragged\");\n                  }\n              }\n          ]}\n          />\n    \n     );\n        }\n      \n  \n  }\n\nexport default App;"]},"metadata":{},"sourceType":"module"}