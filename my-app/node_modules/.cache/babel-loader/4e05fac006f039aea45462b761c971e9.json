{"ast":null,"code":"var _jsxFileName = \"/Users/architbubber/Web_Dev/Gmaps/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Map from \"mapmyindia-react\";\nimport App from './App';\nimport raw from './location.txt';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar lat, long;\n/*\nfetch('http://localhost:3000/update').then(function() {\n  const url = window.location.search;\n  var fs = require('fs'),\n  filename = '../../location.txt';\n  var lat1=parseFloat(url.substr(url.indexOf('=')+1));\n  var long1=parseFloat(url.substr(url.indexOf('g')+2));\n  fs.writeFile('location.txt', lat1 + \",\" + long1, function() { console.log('done') });\n  console.log('lat =' +lat1+' long = '+long1);\n  });\n*/\n\n/*ReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);*/\n\nfetch(raw).then(r => r.text()).then(text => {\n  lat1 = parseFloat(text.split(',')[0]);\n  long1 = parseFloat(text.split(',')[1]);\n  console.log('New Lat:', lat);\n});\nlat = lat1;\nlong = long1;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Map, {\n  markers: [{\n    position: [parseFloat(lat), parseFloat(long)],\n    draggable: true,\n    title: \"Marker title\",\n    onClick: e => {\n      console.log(\"clicked \");\n    },\n    onDragend: e => {\n      console.log(\"dragged\");\n    }\n  }]\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 36,\n  columnNumber: 17\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/Users/architbubber/Web_Dev/Gmaps/my-app/src/index.js"],"names":["React","ReactDOM","Map","App","raw","reportWebVitals","lat","long","fetch","then","r","text","lat1","parseFloat","split","long1","console","log","render","position","draggable","title","onClick","e","onDragend","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AACA,IAAIC,GAAJ,EAAQC,IAAR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACAC,KAAK,CAACJ,GAAD,CAAL,CACGK,IADH,CACQC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADb,EAEGF,IAFH,CAEQE,IAAI,IAAI;AACZC,EAAAA,IAAI,GAAGC,UAAU,CAACF,IAAI,CAACG,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAD,CAAjB;AACAC,EAAAA,KAAK,GAAGF,UAAU,CAACF,IAAI,CAACG,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAD,CAAlB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBX,GAAxB;AACD,CANH;AAQAA,GAAG,GAACM,IAAJ;AACAL,IAAI,GAACQ,KAAL;AACAd,QAAQ,CAACiB,MAAT,eAAgB,QAAC,GAAD;AACd,EAAA,OAAO,EAAE,CACL;AACIC,IAAAA,QAAQ,EAAE,CAAEN,UAAU,CAACP,GAAD,CAAZ,EAAoBO,UAAU,CAACN,IAAD,CAA9B,CADd;AAEIa,IAAAA,SAAS,EAAE,IAFf;AAGIC,IAAAA,KAAK,EAAC,cAHV;AAIIC,IAAAA,OAAO,EAAEC,CAAC,IAAI;AACVP,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH,KANL;AAOIO,IAAAA,SAAS,EAAED,CAAC,IAAI;AACZP,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH;AATL,GADK;AADK;AAAA;AAAA;AAAA;AAAA,QAAhB,EAcKQ,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAdL,E,CAgBA;AACA;AACA;;AACArB,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Map from \"mapmyindia-react\";\nimport App from './App';\nimport raw from './location.txt';\nimport reportWebVitals from './reportWebVitals';\nvar lat,long;\n/*\nfetch('http://localhost:3000/update').then(function() {\n  const url = window.location.search;\n  var fs = require('fs'),\n  filename = '../../location.txt';\n  var lat1=parseFloat(url.substr(url.indexOf('=')+1));\n  var long1=parseFloat(url.substr(url.indexOf('g')+2));\n  fs.writeFile('location.txt', lat1 + \",\" + long1, function() { console.log('done') });\n  console.log('lat =' +lat1+' long = '+long1);\n  });\n*/\n/*ReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);*/\nfetch(raw)\n  .then(r => r.text())\n  .then(text => {\n    lat1 = parseFloat(text.split(',')[0]);\n    long1 = parseFloat(text.split(',')[1]);\n    console.log('New Lat:', lat);\n  });\n  \nlat=lat1;\nlong=long1;\nReactDOM.render(<Map\n  markers={[\n      { \n          position: [ parseFloat(lat) , parseFloat(long)],\n          draggable: true, \n          title:\"Marker title\",\n          onClick: e => {\n              console.log(\"clicked \");\n          },\n          onDragend: e => {\n              console.log(\"dragged\");\n          }\n      }\n  ]}\n  />,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}