{"ast":null,"code":"var _jsxFileName = \"/Users/architbubber/Web_Dev/Gmaps/my-app/src/App.js\";\nimport './App.css';\nimport Map from \"mapmyindia-react\";\nimport React from 'react';\nimport raw from './location.txt'; //var lat= 18.5314,long=73.845,i=0;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar lat,\n    long,\n    i = 0;\n/*fetch(raw)\n.then(r => r.text())\n.then(text => {\n  lat = parseFloat(text.split(',')[0]);\n  long = parseFloat(text.split(',')[1]);\n  i+=1;\n  console.log(i+'text decoded:', lat);\n});*/\n\nfunction App() {\n  function get() {\n    fetch(raw).then(r => r.text()).then(text => {\n      lat = parseFloat(text.split(',')[0]);\n      long = parseFloat(text.split(',')[1]);\n      console.log(i + 'text decoded:', lat);\n      i += 1;\n    });\n\n    if (i === 0) {\n      return 0;\n    } else {\n      return /*#__PURE__*/_jsxDEV(Map, {\n        markers: [{\n          position: [parseFloat(lat), parseFloat(long)],\n          draggable: true,\n          title: parseInt(i),\n          onClick: e => {\n            console.log(\"clicked \");\n          },\n          onDragend: e => {\n            console.log(\"dragged\");\n          }\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  if (get()) {\n    console.log(\"return now \" + i);\n    i += 1;\n    return /*#__PURE__*/_jsxDEV(Map, {\n      markers: [{\n        position: [parseFloat(lat), parseFloat(long)],\n        draggable: true,\n        title: parseInt(i),\n        onClick: e => {\n          console.log(\"clicked \");\n        },\n        onDragend: e => {\n          console.log(\"dragged\");\n        }\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this);\n  }\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/architbubber/Web_Dev/Gmaps/my-app/src/App.js"],"names":["Map","React","raw","lat","long","i","App","get","fetch","then","r","text","parseFloat","split","console","log","position","draggable","title","parseInt","onClick","e","onDragend"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,GAAP,MAAgB,kBAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,gBAAhB,C,CACA;;;AACA,IAAIC,GAAJ;AAAA,IAAQC,IAAR;AAAA,IAAaC,CAAC,GAAC,CAAf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,SAASC,GAAT,GAAe;AACb,WAASC,GAAT,GAAc;AACdC,IAAAA,KAAK,CAACN,GAAD,CAAL,CACKO,IADL,CACUC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADf,EAEKF,IAFL,CAEUE,IAAI,IAAI;AACZR,MAAAA,GAAG,GAAGS,UAAU,CAACD,IAAI,CAACE,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAD,CAAhB;AACAT,MAAAA,IAAI,GAAGQ,UAAU,CAACD,IAAI,CAACE,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAD,CAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYV,CAAC,GAAC,eAAd,EAA+BF,GAA/B;AACAE,MAAAA,CAAC,IAAE,CAAH;AACD,KAPL;;AAQI,QAAGA,CAAC,KAAG,CAAP,EAAS;AAAC,aAAO,CAAP;AAAU,KAApB,MACK;AAAC,0BACJ,QAAC,GAAD;AACE,QAAA,OAAO,EAAE,CACL;AACIW,UAAAA,QAAQ,EAAE,CAAEJ,UAAU,CAACT,GAAD,CAAZ,EAAoBS,UAAU,CAACR,IAAD,CAA9B,CADd;AAEIa,UAAAA,SAAS,EAAE,IAFf;AAGIC,UAAAA,KAAK,EAACC,QAAQ,CAACd,CAAD,CAHlB;AAIIe,UAAAA,OAAO,EAAEC,CAAC,IAAI;AACVP,YAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH,WANL;AAOIO,UAAAA,SAAS,EAAED,CAAC,IAAI;AACZP,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH;AATL,SADK;AADX;AAAA;AAAA;AAAA;AAAA,cADI;AAkBL;AACF;;AACD,MAAGR,GAAG,EAAN,EAAS;AACPO,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAcV,CAA1B;AACAA,IAAAA,CAAC,IAAE,CAAH;AACA,wBACE,QAAC,GAAD;AACE,MAAA,OAAO,EAAE,CACL;AACIW,QAAAA,QAAQ,EAAE,CAAEJ,UAAU,CAACT,GAAD,CAAZ,EAAoBS,UAAU,CAACR,IAAD,CAA9B,CADd;AAEIa,QAAAA,SAAS,EAAE,IAFf;AAGIC,QAAAA,KAAK,EAACC,QAAQ,CAACd,CAAD,CAHlB;AAIIe,QAAAA,OAAO,EAAEC,CAAC,IAAI;AACVP,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH,SANL;AAOIO,QAAAA,SAAS,EAAED,CAAC,IAAI;AACZP,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH;AATL,OADK;AADX;AAAA;AAAA;AAAA;AAAA,YADF;AAkBG;AAGN;;KAvDMT,G;AAyDT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport Map from \"mapmyindia-react\";\nimport React from 'react';\nimport raw from './location.txt'; \n//var lat= 18.5314,long=73.845,i=0;\nvar lat,long,i=0;\n/*fetch(raw)\n.then(r => r.text())\n.then(text => {\n  lat = parseFloat(text.split(',')[0]);\n  long = parseFloat(text.split(',')[1]);\n  i+=1;\n  console.log(i+'text decoded:', lat);\n});*/\n\n  \n  \nfunction App() {\n  function get(){\n  fetch(raw)\n      .then(r => r.text())\n      .then(text => {\n        lat = parseFloat(text.split(',')[0]);\n        long = parseFloat(text.split(',')[1]);\n        console.log(i+'text decoded:', lat);\n        i+=1;\n      });\n      if(i===0){return 0;}\n      else {return    (\n        <Map\n          markers={[\n              { \n                  position: [ parseFloat(lat) , parseFloat(long)],\n                  draggable: true, \n                  title:parseInt(i),\n                  onClick: e => {\n                      console.log(\"clicked \");\n                  },\n                  onDragend: e => {\n                      console.log(\"dragged\");\n                  }\n              }\n          ]}\n          />\n    \n     );\n      }\n    }\n    if(get()){\n      console.log(\"return now \"+i);\n      i+=1;\n      return    (\n        <Map\n          markers={[\n              { \n                  position: [ parseFloat(lat) , parseFloat(long)],\n                  draggable: true, \n                  title:parseInt(i),\n                  onClick: e => {\n                      console.log(\"clicked \");\n                  },\n                  onDragend: e => {\n                      console.log(\"dragged\");\n                  }\n              }\n          ]}\n          />\n    \n     );\n        }\n      \n  \n  }\n\nexport default App;"]},"metadata":{},"sourceType":"module"}