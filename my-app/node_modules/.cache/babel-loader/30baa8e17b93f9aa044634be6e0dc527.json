{"ast":null,"code":"var _jsxFileName = \"/Users/architbubber/Web_Dev/Gmaps/my-app/src/App.js\";\nimport './App.css';\nimport Map from \"mapmyindia-react\";\nimport React from 'react';\nimport raw from './location.txt';\nimport fs from 'fs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar lat = 18.5314,\n    long = 73.845,\n    i = 0; //var lat,long,i=0;\n\n/*fetch(raw)\n.then(r => r.text())\n.then(text => {\n  lat = parseFloat(text.split(',')[0]);\n  long = parseFloat(text.split(',')[1]);\n  i+=1;\n  console.log(i+'text decoded:', lat);\n});*/\n\nfunction App() {\n  function put() {\n    var filename = './location.txt';\n    fs.readFile(filename, 'utf8', function (err, data) {\n      if (err) throw err; //console.log('OK: ' + filename);\n\n      lat = parseFloat(data.split(',')[0]);\n      long = parseFloat(data.split(',')[1]);\n      console.log(lat);\n    });\n  }\n\n  function get() {\n    console.log(i + 'get:');\n    fetch(raw).then(r => r.text()).then(text => {\n      lat = parseFloat(text.split(',')[0]);\n      long = parseFloat(text.split(',')[1]);\n      console.log(i + 'text decoded:', lat);\n      i += 1;\n    });\n    return 1;\n  }\n\n  if (get()) {\n    console.log(\"return now \" + i);\n    i += 1;\n    return /*#__PURE__*/_jsxDEV(Map, {\n      markers: [{\n        position: [parseFloat(lat), parseFloat(long)],\n        draggable: true,\n        title: parseFloat(lat),\n        onClick: e => {\n          console.log(\"clicked \");\n        },\n        onDragend: e => {\n          console.log(\"dragged\");\n        }\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this);\n  }\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/architbubber/Web_Dev/Gmaps/my-app/src/App.js"],"names":["Map","React","raw","fs","lat","long","i","App","put","filename","readFile","err","data","parseFloat","split","console","log","get","fetch","then","r","text","position","draggable","title","onClick","e","onDragend"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,GAAP,MAAgB,kBAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,OAAOC,EAAP,MAAe,IAAf;;AACA,IAAIC,GAAG,GAAE,OAAT;AAAA,IAAiBC,IAAI,GAAC,MAAtB;AAAA,IAA6BC,CAAC,GAAC,CAA/B,C,CACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,SAASC,GAAT,GAAe;AACb,WAASC,GAAT,GAAc;AACZ,QAAIC,QAAQ,GAAC,gBAAb;AACAN,IAAAA,EAAE,CAACO,QAAH,CAAYD,QAAZ,EAAsB,MAAtB,EAA8B,UAASE,GAAT,EAAcC,IAAd,EAAoB;AAChD,UAAID,GAAJ,EAAS,MAAMA,GAAN,CADuC,CAEhD;;AACAP,MAAAA,GAAG,GAAGS,UAAU,CAACD,IAAI,CAACE,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAD,CAAhB;AACAT,MAAAA,IAAI,GAAGQ,UAAU,CAACD,IAAI,CAACE,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAD,CAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYZ,GAAZ;AACH,KANC;AAOD;;AACD,WAASa,GAAT,GAAc;AACZF,IAAAA,OAAO,CAACC,GAAR,CAAYV,CAAC,GAAC,MAAd;AACFY,IAAAA,KAAK,CAAChB,GAAD,CAAL,CACKiB,IADL,CACUC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADf,EAEKF,IAFL,CAEUE,IAAI,IAAI;AACZjB,MAAAA,GAAG,GAAGS,UAAU,CAACQ,IAAI,CAACP,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAD,CAAhB;AACAT,MAAAA,IAAI,GAAGQ,UAAU,CAACQ,IAAI,CAACP,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAD,CAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYV,CAAC,GAAC,eAAd,EAA+BF,GAA/B;AACAE,MAAAA,CAAC,IAAE,CAAH;AACD,KAPL;AAQI,WAAO,CAAP;AACD;;AAED,MAAGW,GAAG,EAAN,EAAS;AACPF,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAcV,CAA1B;AACAA,IAAAA,CAAC,IAAE,CAAH;AACA,wBACE,QAAC,GAAD;AACE,MAAA,OAAO,EAAE,CACL;AACIgB,QAAAA,QAAQ,EAAE,CAAET,UAAU,CAACT,GAAD,CAAZ,EAAoBS,UAAU,CAACR,IAAD,CAA9B,CADd;AAEIkB,QAAAA,SAAS,EAAE,IAFf;AAGIC,QAAAA,KAAK,EAACX,UAAU,CAACT,GAAD,CAHpB;AAIIqB,QAAAA,OAAO,EAAEC,CAAC,IAAI;AACVX,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH,SANL;AAOIW,QAAAA,SAAS,EAAED,CAAC,IAAI;AACZX,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH;AATL,OADK;AADX;AAAA;AAAA;AAAA;AAAA,YADF;AAkBG;AAGN;;KAhDMT,G;AAkDT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport Map from \"mapmyindia-react\";\nimport React from 'react';\nimport raw from './location.txt'; \nimport fs from 'fs';\nvar lat= 18.5314,long=73.845,i=0;\n//var lat,long,i=0;\n/*fetch(raw)\n.then(r => r.text())\n.then(text => {\n  lat = parseFloat(text.split(',')[0]);\n  long = parseFloat(text.split(',')[1]);\n  i+=1;\n  console.log(i+'text decoded:', lat);\n});*/\n\n  \n  \nfunction App() {\n  function put(){\n    var filename='./location.txt';\n    fs.readFile(filename, 'utf8', function(err, data) {\n      if (err) throw err;\n      //console.log('OK: ' + filename);\n      lat = parseFloat(data.split(',')[0]);\n      long = parseFloat(data.split(',')[1]);\n      console.log(lat)\n  });\n  }\n  function get(){\n    console.log(i+'get:' );\n  fetch(raw)\n      .then(r => r.text())\n      .then(text => {\n        lat = parseFloat(text.split(',')[0]);\n        long = parseFloat(text.split(',')[1]);\n        console.log(i+'text decoded:', lat);\n        i+=1;\n      });\n      return 1;\n    }\n    \n    if(get()){\n      console.log(\"return now \"+i);\n      i+=1;\n      return (\n        <Map\n          markers={[\n              { \n                  position: [ parseFloat(lat) , parseFloat(long)],\n                  draggable: true, \n                  title:parseFloat(lat),\n                  onClick: e => {\n                      console.log(\"clicked \");\n                  },\n                  onDragend: e => {\n                      console.log(\"dragged\");\n                  }\n              }\n          ]}\n          />\n    \n     );\n        }\n      \n  \n  }\n\nexport default App;"]},"metadata":{},"sourceType":"module"}